{"version":3,"sources":["GameContext.js","Square.js","Table.js","HomeContext.js","TransitionsModal.js","Game.js","Footer.js","Home.js","index.js"],"names":["React","createContext","currentPlayer","updateTable","id","newValue","gameEnd","Square","squareId","squareContent","useContext","GameContext","className","onClick","Table","squares","map","square","key","value","setShowGame","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","border","padding","spacing","width","textAlign","TransitionsModal","winner","resetGame","setGameEnd","classes","useState","open","setOpen","useEffect","handleOpen","handleClose","HomeContext","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","src","process","alt","toUpperCase","style","marginTop","Button","variant","size","color","Game","setSquares","setCurrentPlayer","setWinner","isFirstRun","useRef","current","evaluateGame","every","updateCurrentPlayer","contextValue","nextSquares","index","findIndex","splice","Provider","Footer","fontSize","href","height","Home","showGame","endIcon","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aaaf9950.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.createContext({\r\n  currentPlayer: \"x\",\r\n  updateTable: (id, newValue) => {},\r\n  gameEnd: false,\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport \"./Square.css\";\r\nimport GameContext from \"./GameContext\";\r\n\r\nfunction Square({ squareId, squareContent }) {\r\n  const { currentPlayer, updateTable, gameEnd } = useContext(GameContext);\r\n\r\n  const handleClick = () => {\r\n    if (squareContent === \"\" && !gameEnd) {\r\n      updateTable(squareId, currentPlayer);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\"square\" + (squareContent === \"o\" ? \" green_text\" : \"\")}\r\n      onClick={handleClick}\r\n    >\r\n      {squareContent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\nimport \"./Table.css\";\r\n\r\nfunction Table({ squares }) {\r\n  return (\r\n    <div className=\"table\">\r\n      {squares.map((square) => (\r\n        <Square\r\n          key={square.id}\r\n          squareId={square.id}\r\n          squareContent={square.value}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nexport default React.createContext({\r\n  setShowGame: () => {},\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport HomeContext from \"./HomeContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    border: \"2px solid white\",\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: \"400px\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nfunction TransitionsModal({ winner, resetGame, setGameEnd }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    handleOpen();\r\n  }, [winner]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setGameEnd(false);\r\n    resetGame();\r\n    setOpen(false);\r\n  };\r\n\r\n  const { setShowGame } = React.useContext(HomeContext);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/icons8-prize-money-48.png\"}\r\n              alt=\"Prize logo\"\r\n            />\r\n            {winner === \"xo\" ? (\r\n              <h2>Game ended in a draw !</h2>\r\n            ) : (\r\n              <h2>\r\n                Winner is ...{\" \"}\r\n                <span className={winner === \"o\" ? \"green_text\" : \"\"}>\r\n                  {winner.toUpperCase()}\r\n                </span>\r\n              </h2>\r\n            )}\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                marginTop: \"50px\",\r\n              }}\r\n              id=\"transition-modal-description\"\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                style={{ backgroundColor: \"#263238\", color: \"white\" }}\r\n                onClick={() => {\r\n                  setShowGame(false);\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Go Back to Home\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                style={{ backgroundColor: \"#53af50\", color: \"white\" }}\r\n                onClick={handleClose}\r\n              >\r\n                Restart Game\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default TransitionsModal;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./Game.css\";\r\nimport Table from \"./Table\";\r\nimport GameContext from \"./GameContext\";\r\nimport TransitionsModal from \"./TransitionsModal\";\r\n\r\nfunction Game() {\r\n  const [squares, setSquares] = useState([\r\n    { id: 0, value: \"\" },\r\n    { id: 1, value: \"\" },\r\n    { id: 2, value: \"\" },\r\n    { id: 3, value: \"\" },\r\n    { id: 4, value: \"\" },\r\n    { id: 5, value: \"\" },\r\n    { id: 6, value: \"\" },\r\n    { id: 7, value: \"\" },\r\n    { id: 8, value: \"\" },\r\n  ]);\r\n  const [currentPlayer, setCurrentPlayer] = useState(\"x\");\r\n  const [gameEnd, setGameEnd] = useState(false);\r\n  const [winner, setWinner] = useState(\"\");\r\n\r\n  const isFirstRun = useRef(true);\r\n  useEffect(() => {\r\n    // pass the first render\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n      return;\r\n    }\r\n    evaluateGame();\r\n    // eslint-disable-next-line\r\n  }, [squares]);\r\n\r\n  useEffect(() => {\r\n    if (!gameEnd) setCurrentPlayer(\"x\");\r\n  }, [gameEnd]);\r\n  const resetGame = () => {\r\n    setCurrentPlayer(\"x\");\r\n    setSquares([\r\n      { id: 0, value: \"\" },\r\n      { id: 1, value: \"\" },\r\n      { id: 2, value: \"\" },\r\n      { id: 3, value: \"\" },\r\n      { id: 4, value: \"\" },\r\n      { id: 5, value: \"\" },\r\n      { id: 6, value: \"\" },\r\n      { id: 7, value: \"\" },\r\n      { id: 8, value: \"\" },\r\n    ]);\r\n  };\r\n\r\n  const updateTable = (id, newValue) => {\r\n    const nextSquares = [...squares];\r\n    const index = nextSquares.findIndex((square) => square.id === id);\r\n    nextSquares.splice(index, 1, { id: id, value: newValue });\r\n    setSquares(nextSquares);\r\n  };\r\n\r\n  const evaluateGame = () => {\r\n    const topRow =\r\n      squares[0].value !== \"\" &&\r\n      squares[0].value === squares[1].value &&\r\n      squares[0].value === squares[2].value;\r\n    if (topRow) {\r\n      setWinner(squares[0].value);\r\n      setGameEnd(true);\r\n      return;\r\n    }\r\n    const middleRow =\r\n      squares[3].value !== \"\" &&\r\n      squares[3].value === squares[4].value &&\r\n      squares[4].value === squares[5].value;\r\n    if (middleRow) {\r\n      setWinner(squares[3].value);\r\n      setGameEnd(true);\r\n      return;\r\n    }\r\n    const bottomRow =\r\n      squares[6].value !== \"\" &&\r\n      squares[6].value === squares[7].value &&\r\n      squares[7].value === squares[8].value;\r\n    if (bottomRow) {\r\n      setWinner(squares[6].value);\r\n      setGameEnd(true);\r\n      return;\r\n    }\r\n    const leftColumn =\r\n      squares[0].value !== \"\" &&\r\n      squares[0].value === squares[3].value &&\r\n      squares[3].value === squares[6].value;\r\n    if (leftColumn) {\r\n      setWinner(squares[0].value);\r\n      setGameEnd(true);\r\n      return;\r\n    }\r\n    const middleColumn =\r\n      squares[1].value !== \"\" &&\r\n      squares[1].value === squares[4].value &&\r\n      squares[4].value === squares[7].value;\r\n    if (middleColumn) {\r\n      setWinner(squares[1].value);\r\n      setGameEnd(true);\r\n      return;\r\n    }\r\n    const rightColumn =\r\n      squares[2].value !== \"\" &&\r\n      squares[2].value === squares[5].value &&\r\n      squares[5].value === squares[8].value;\r\n    if (rightColumn) {\r\n      setWinner(squares[2].value);\r\n      setGameEnd(true);\r\n      return;\r\n    }\r\n    const leftDiagonal =\r\n      squares[0].value !== \"\" &&\r\n      squares[0].value === squares[4].value &&\r\n      squares[4].value === squares[8].value;\r\n    if (leftDiagonal) {\r\n      setWinner(squares[0].value);\r\n      setGameEnd(true);\r\n      return;\r\n    }\r\n    const rightDiagonal =\r\n      squares[2].value !== \"\" &&\r\n      squares[2].value === squares[4].value &&\r\n      squares[4].value === squares[6].value;\r\n    if (rightDiagonal) {\r\n      setWinner(squares[2].value);\r\n      setGameEnd(true);\r\n      return;\r\n    }\r\n\r\n    // Draw\r\n    if (squares.every((square) => square.value !== \"\")) {\r\n      setWinner(\"xo\");\r\n      setGameEnd(true);\r\n    }\r\n    // update Current Player\r\n    updateCurrentPlayer();\r\n  };\r\n  const updateCurrentPlayer = () => {\r\n    if (currentPlayer === \"x\") setCurrentPlayer(\"o\");\r\n    else if (currentPlayer === \"o\") setCurrentPlayer(\"x\");\r\n  };\r\n\r\n  const contextValue = {\r\n    currentPlayer: currentPlayer,\r\n    updateTable: updateTable,\r\n    gameEnd: gameEnd,\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider value={contextValue}>\r\n      <div className=\"game\">\r\n        {gameEnd ? (\r\n          <TransitionsModal\r\n            winner={winner}\r\n            resetGame={resetGame}\r\n            setGameEnd={setGameEnd}\r\n          />\r\n        ) : (\r\n          <h2>\r\n            Current player :\r\n            <span className={currentPlayer === \"o\" ? \"green_text\" : \"\"}>\r\n              {currentPlayer.toUpperCase()}\r\n            </span>\r\n          </h2>\r\n        )}\r\n        <Table squares={squares} />\r\n      </div>\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <span>\r\n        2020, Developed with{\" \"}\r\n        <FavoriteIcon fontSize=\"small\" style={{ color: \"#c93434\" }} /> by{\" \"}\r\n        <span className=\"name\">Loucif RAKEM</span>\r\n      </span>\r\n      <div className=\"buttons\">\r\n        <a href=\"https://www.linkedin.com/in/lrakem/\">\r\n          <LinkedInIcon className=\"footer_icon\" />\r\n        </a>\r\n        <a href=\"https://github.com/Loucif-RAKEM/morpion-app\">\r\n          <GitHubIcon className=\"footer_icon\" />\r\n        </a>\r\n        <a href=\"mailto:rakem.loucif@gmail.com\">\r\n          <MailIcon className=\"footer_icon\" />\r\n        </a>\r\n        <a href=\"https://icons8.com\">\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/icons8-icons8-48.png\"}\r\n            alt=\"icons8 logo\"\r\n            style={{ height: \"30px\", width: \"30px\" }}\r\n          />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Game from \"./Game\";\r\nimport HomeContext from \"./HomeContext\";\r\nimport SportsEsportsIcon from \"@material-ui/icons/SportsEsports\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Home() {\r\n  const [showGame, setShowGame] = useState(false);\r\n\r\n  const startGame = () => setShowGame(true);\r\n\r\n  const contextValue = { setShowGame: setShowGame };\r\n\r\n  return showGame ? (\r\n    <HomeContext.Provider value={contextValue}>\r\n      <Game />\r\n      <Footer />\r\n    </HomeContext.Provider>\r\n  ) : (\r\n    <div className=\"flex_container\">\r\n      <div className=\"home_text\">\r\n        <img\r\n          className=\"logo animate__animated animate__flipInX\"\r\n          src={process.env.PUBLIC_URL + \"/tic-tac-toe-logo.png\"}\r\n          alt=\"Tic Tac Toe Logo\"\r\n        />\r\n        <p>\r\n          Press the{\" \"}\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            style={{\r\n              backgroundColor: \"#53af50\",\r\n              color: \"white\",\r\n              fontSize: \"0.7rem\",\r\n            }}\r\n            endIcon={<SportsEsportsIcon />}\r\n          >\r\n            start game\r\n          </Button>{\" \"}\r\n          button to start the game. You may also check out the game's\r\n          instructions below.\r\n        </p>\r\n\r\n        <div className=\"instructions\">\r\n          <ul>\r\n            <li>Play occurs on a 3 by 3 grid of 9 empty squares.</li>\r\n            <li>\r\n              Two players alternate marking empty squares, the first player\r\n              marking Xs and the second player marking Os.\r\n            </li>\r\n            <li>\r\n              If one player places three of the same marks in a row, that player\r\n              wins.\r\n            </li>\r\n            <li>\r\n              If the spaces are all filled and there is no winner, the game ends\r\n              in a draw.\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"home_buttons\">\r\n        <Button\r\n          variant=\"contained\"\r\n          id=\"playButton\"\r\n          endIcon={<SportsEsportsIcon />}\r\n          onClick={startGame}\r\n        >\r\n          start game\r\n        </Button>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"fontsource-roboto\";\r\nimport Home from \"./Home\";\r\n\r\nReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}